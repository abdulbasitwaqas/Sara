apply plugin: 'com.android.application'apply plugin: 'kotlin-android'apply plugin: 'kotlin-android-extensions'apply plugin: 'kotlin-kapt'apply plugin: "androidx.navigation.safeargs"static def dateTime() {    return (int) (((new Date().getTime() / 1000) - 1451606400) / 10)}def _srNodef _majordef _minordef _patchdef _versionCodeandroid {    compileSdkVersion 33    buildToolsVersion "30.0.3"    def versionPropsFile = file('version.properties')    def Properties versionProps = new Properties()    if (versionPropsFile.canRead()) {        versionProps.load(new FileInputStream(versionPropsFile))    } else {        versionProps['VERSION_NAME_MAJOR'] = '1'        versionProps['VERSION_NAME_MINOR'] = '0'        versionProps['VERSION_NAME_PATCH'] = '1'        versionProps['VERSION_CODE'] = '1'        versionProps['SERIAL_NO'] = '1'    }    _major = versionProps['VERSION_NAME_MAJOR'].toInteger()    _minor = versionProps['VERSION_NAME_MINOR'].toInteger()    _patch = versionProps['VERSION_NAME_PATCH'].toInteger()    _versionCode = versionProps['VERSION_CODE'].toInteger()    _srNo = versionProps['SERIAL_NO'].toInteger()//    preBuild.doFirst { increasePatchCode }    defaultConfig {        applicationId "com.jsbl.sara"        minSdkVersion 24        targetSdkVersion 33        versionCode _versionCode        versionName "$_major.$_minor.$_patch"        multiDexEnabled true        vectorDrawables.useSupportLibrary = true        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"    }    buildTypes {        debug {            minifyEnabled false            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'        }        release {            minifyEnabled true            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'        }    }    flavorDimensions 'default'    productFlavors {        Dev {            applicationIdSuffix = ".dev"            resValue 'string', APP_NAME, '"AiGenix"'//            applicationName = "Debug"            buildConfigField "String", KEY_BASE_URL, BASE_URL_DEV            buildConfigField "String", KEY_BASE_URL_IMAGES, BASE_URL_DEV_IMAGES            buildConfigField "String", KEY_BASE_URL_IMAGES_CNIC, BASE_URL_DEV_IMAGES_CNIC            buildConfigField "String", KEY_BASE_URL_GOOGLE_APIS, BASE_URL_DEV_GOOGLE_APIS            buildConfigField "String", KEY_BASE_URL_SCOPE, BASE_URL_SCOPE            buildConfigField "String", KEY_ICON_BASEURL, ICON_BASEURL            buildConfigField "String", KEY_REEDEM_ICON_BASEURL, REEDEM_ICON_BASEURL            buildConfigField "String", KEY_GAMES_ICONS, GAMES_ICONS            buildConfigField "String", KEY_CAR_COLOR_BASE_URL_DEV, CAR_COLOR_BASE_URL_DEV            buildConfigField "String", KEY_CAR_MANUF_BASE_URL_DEV, CAR_MANUF_BASE_URL_DEV            buildConfigField "String", KEY_LOAD_PROFILE_BASE_URL_DEV, LOAD_PROFILE_BASE_URL_DEV        }        QA {            applicationIdSuffix = ".qa"            resValue 'string', APP_NAME, '"AiGenix-QA"'//            applicationNameSuffix = "-QA"            buildConfigField "String", KEY_BASE_URL, BASE_URL_DEV            buildConfigField "String", KEY_BASE_URL_IMAGES, BASE_URL_DEV_IMAGES            buildConfigField "String", KEY_BASE_URL_IMAGES_CNIC, BASE_URL_DEV_IMAGES_CNIC            buildConfigField "String", KEY_BASE_URL_GOOGLE_APIS, BASE_URL_DEV_GOOGLE_APIS            buildConfigField "String", KEY_BASE_URL_SCOPE, BASE_URL_SCOPE            buildConfigField "String", KEY_ICON_BASEURL, ICON_BASEURL            buildConfigField "String", KEY_REEDEM_ICON_BASEURL, REEDEM_ICON_BASEURL            buildConfigField "String", KEY_GAMES_ICONS, GAMES_ICONS            buildConfigField "String", KEY_CAR_COLOR_BASE_URL_DEV, CAR_COLOR_BASE_URL_DEV            buildConfigField "String", KEY_CAR_MANUF_BASE_URL_DEV, CAR_MANUF_BASE_URL_DEV            buildConfigField "String", KEY_LOAD_PROFILE_BASE_URL_DEV, LOAD_PROFILE_BASE_URL_DEV        }        Uat {            applicationIdSuffix = ".uat"            resValue 'string', APP_NAME, '"AiGenix-UAT"'//            applicationNameSuffix = "-Stagging"            buildConfigField "String", KEY_BASE_URL, BASE_URL_UAT_DEV            buildConfigField "String", KEY_BASE_URL_IMAGES, BASE_URL_UAT_IMAGES            buildConfigField "String", KEY_BASE_URL_IMAGES_CNIC, BASE_URL_UAT_DEV_IMAGES_CNIC            buildConfigField "String", KEY_BASE_URL_GOOGLE_APIS, BASE_URL_UAT_GOOGLE_APIS            buildConfigField "String", KEY_BASE_URL_SCOPE, BASE_URL_SCOPE            buildConfigField "String", KEY_ICON_BASEURL, UAT_ICON_BASEURL            buildConfigField "String", KEY_REEDEM_ICON_BASEURL, UAT_REEDEM_ICON_BASEURL            buildConfigField "String", KEY_GAMES_ICONS, UAT_GAMES_ICONS            buildConfigField "String", KEY_CAR_COLOR_BASE_URL_DEV, UAT_CAR_COLOR_BASE_URL            buildConfigField "String", KEY_CAR_MANUF_BASE_URL_DEV, UAT_CAR_MANUF_BASE_URL            buildConfigField "String", KEY_LOAD_PROFILE_BASE_URL_DEV, UAT_LOAD_PROFILE_BASE_URL        }        Production {            resValue 'string', APP_NAME, '"AiGenix"'            buildConfigField "String", KEY_BASE_URL, BASE_URL            buildConfigField "String", KEY_BASE_URL_IMAGES, BASE_URL_IMAGES            buildConfigField "String", KEY_BASE_URL_IMAGES_CNIC, BASE_URL_IMAGES_CNIC            buildConfigField "String", KEY_BASE_URL_GOOGLE_APIS, BASE_URL_GOOGLE_APIS            buildConfigField "String", KEY_BASE_URL_SCOPE, BASE_URL_SCOPE            buildConfigField "String", KEY_ICON_BASEURL, ICON_BASEURL            buildConfigField "String", KEY_REEDEM_ICON_BASEURL, REEDEM_ICON_BASEURL            buildConfigField "String", KEY_GAMES_ICONS, GAMES_ICONS            buildConfigField "String", KEY_CAR_COLOR_BASE_URL_DEV, CAR_COLOR_BASE_URL_DEV            buildConfigField "String", KEY_CAR_MANUF_BASE_URL_DEV, CAR_MANUF_BASE_URL_DEV            buildConfigField "String", KEY_LOAD_PROFILE_BASE_URL_DEV, LOAD_PROFILE_BASE_URL_DEV        }    }    applicationVariants.all { variant ->        variant.outputs.each { output ->//            output.outputFileName = "AiGenix-${variant.name}-${variant.versionCode}-${variant.versionName}-${_srNo}.apk"            output.outputFileName = "AiGenix-${_srNo}-${variant.name}-${variant.versionCode}-${variant.versionName}.apk"        }    }    compileOptions {        sourceCompatibility JavaVersion.VERSION_1_8        targetCompatibility JavaVersion.VERSION_1_8    }    buildFeatures{        viewBinding = true        dataBinding = true    }    /*  dataBinding.enabled = true      viewBinding=true*/    kotlinOptions {        jvmTarget = JavaVersion.VERSION_1_8.toString()    }    androidExtensions {        experimental = true    }    tasks.whenTaskAdded { task ->        if (task.name == 'preDevRelease') {//            _versionCode= _versionCode + 1            println(task.name)            versionProps['VERSION_CODE'] = (_versionCode+1).toString()//            _srNo = _srNo + 1            versionProps['SERIAL_NO'] = (_srNo+1).toString()            versionProps.store(versionPropsFile.newWriter(), null)        } else if (task.name == 'preDevDebugBuild') {            println(task.name)            versionProps['SERIAL_NO'] = (_srNo+1).toString()//            _patch =  _patch + 1            versionProps['VERSION_NAME_PATCH'] = (_patch+1).toString()            versionProps.store(versionPropsFile.newWriter(), null)        }    }}//def lifeCycleExtensionVersion = '1.1.1'def supportVersion = '28.0.0'def roomVersion = '2.3.0'def preferencesVersion = '1.0.0'def rxAndroidVersion = '3.0.0'//stateOfArtdef rxJavaVersion = '2.1.1'def navVersion = '2.2.2'def retrofitVersion = '2.8.1'def glideVersion = '4.11.0'def lifecycle_version = "2.2.0"def daggerVersion = '2.28'def mokitoVersion = '2.11.0'dependencies {    implementation fileTree(dir: 'libs', include: ['*.jar'])    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.20"    implementation 'androidx.appcompat:appcompat:1.3.1'    implementation 'androidx.core:core-ktx:1.6.0'    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'    //Multidexing    implementation 'androidx.multidex:multidex:2.0.1'    //support Lib    implementation "com.android.support:design:$supportVersion"    // ViewModel    //noinspection GradleDependency    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"    // LiveData    //noinspection GradleDependency    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"    // Saved state module for ViewModel    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"    // alternately - if using Java8, use the following instead of lifecycle-compiler//    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"    //Room Database    implementation "androidx.room:room-runtime:$roomVersion"    implementation "androidx.legacy:legacy-support-v4:1.0.0"    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'    kapt "androidx.room:room-compiler:$roomVersion"    implementation "androidx.room:room-ktx:$roomVersion"    //Kotlin Coroutines    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1"    //Navigation    implementation "androidx.navigation:navigation-fragment-ktx:2.3.5"    implementation "androidx.navigation:navigation-ui-ktx:2.3.5"    //Google Material//    implementation "com.google.android.material:material:1.0.0"    implementation 'com.google.android.material:material:1.2.0'//    implementation 'com.google.android.material:material:1.2.0-alpha03'    //Google Maps    implementation 'com.google.android.gms:play-services-location:18.0.0'    implementation 'com.google.android.gms:play-services-maps:17.0.1'    implementation 'com.google.maps.android:android-maps-utils:0.5'    implementation 'org.slf4j:slf4j-nop:1.7.25'    //google Vision    implementation 'com.google.android.gms:play-services-vision:20.1.3'    //Retrofit    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"    implementation "com.squareup.okhttp3:logging-interceptor:4.9.0"    //RxJava and RxAndroid    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"    implementation "io.reactivex.rxjava2:rxandroid:$rxJavaVersion"    //Glide for images    implementation "com.github.bumptech.glide:glide:$glideVersion"    //Palette for UI    implementation "com.android.support:palette-v7:$supportVersion"    //Jetpack Preferences    implementation "androidx.preference:preference:$preferencesVersion"    //dagger    implementation "com.google.dagger:dagger:2.28.3"    //noinspection OutdatedLibrary    implementation "com.google.dagger:dagger-android:2.28"    kapt "com.google.dagger:dagger-compiler:2.28"    kapt "com.google.dagger:dagger-android-processor:2.28"    //mokito    testImplementation 'androidx.test:core:1.4.0'    // Optional -- Mockito framework    testImplementation "org.mockito:mockito-core:$mokitoVersion"    testImplementation "android.arch.core:core-testing:1.1.1"    kaptTest "com.google.dagger:dagger-compiler:2.28"    testImplementation 'junit:junit:4.13.2'    androidTestImplementation 'androidx.test.ext:junit:1.1.3'    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'    //Third Party Libraries    //Welcome Slider    implementation 'com.github.smarteist:autoimageslider:1.4.0'    //PinView    /*implementation 'io.github.chaosleung:pinview:1.4.4'    implementation 'com.github.GoodieBag:Pinview:v1.4'*/    implementation 'com.github.darshan-miskin:PinView-Android:v1.1.8'    //sdp    implementation 'com.intuit.sdp:sdp-android:1.0.6'    //circle imageView    implementation 'de.hdodenhof:circleimageview:3.1.0'    //timber for logging    implementation 'com.jakewharton.timber:timber:4.7.1'    /*  //Seek bar Indicator      implementation 'com.github.warkiz.widget:indicatorseekbar:2.1.2'      // enhanced version     implementation 'com.xw.repo:bubbleseekbar:3.20'      // implementation 'com.xw.repo:bubbleseekbar:${LATEST_VERSION}'*/    // sample:    implementation 'com.github.Jay-Goo:RangeSeekBar:v3.0.0'//    implementation 'com.github.Jay-Goo:RangeSeekBar:Release Version'    implementation "com.github.skydoves:progressview:1.1.1"    api 'com.otaliastudios:cameraview:2.7.0'//OTP    implementation 'com.github.stfalcon:smsverifycatcher:0.3.2'    //EditText//    implementation 'com.github.simformsolutions:SSCustomEditTextOutLineBorder:1.0.10'    implementation 'com.mikhaellopez:circularprogressbar:3.0.3'    implementation 'com.agrawalsuneet.androidlibs:dotsloader:1.4'    compileOnly 'com.github.pengrad:jdk9-deps:1.0'    //for portal api//    implementation 'com.scopetechnology:smartdrive:1.0.22'//    implementation 'com.scopetechnology:portal-api-smartdrive:1.1.30'com.scopetechnology:smartdrive    implementation 'com.scopetechnology:smartdrive:1.0.+'    implementation 'com.scopetechnology:portal-api-smartdrive:1.1.+'    //Gson    implementation 'com.google.code.gson:gson:2.8.6'    //volley    implementation 'com.android.volley:volley:1.2.0'    implementation 'com.bikomobile:multipart:1.3.4'    implementation 'com.github.hardillb:MultiPartVolley:0.0.4'    implementation "androidx.activity:activity:1.3.1"    implementation "androidx.fragment:fragment:1.3.6"    implementation 'com.karumi:dexter:5.0.0'    implementation 'com.github.fondesa:kpermissions:3.2.1'    api 'com.theartofdev.edmodo:android-image-cropper:2.8.+'    implementation 'com.scottyab:rootbeer-lib:0.0.8'}